{"version":3,"sources":["Components/login.js","Components/signup.js","Components/locateMaps.js","Components/mapContainer.js","Components/locationCards.js","Components/dashboard.js","App.js","serviceWorker.js","index.js","firebase.js"],"names":["login","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","loading","userData","email","state","password","firebase","signInWithEmailAndPassword","then","res","user","alert","localStorage","setItem","uid","history","push","clearState","catch","e","errorMsg","message","this","className","Container","component","maxWidth","CssBaseline","Typography","variant","noValidate","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","helperText","onChange","type","Button","color","onClick","disabled","CircularProgress","size","Grid","container","item","Link","href","Component","signup","createUserWithEmailAndPassword","MapContainer","markers","position","lat","lng","onMarkerDragEnd","coord","index","latLng","prevState","handleLocation","google","style","width","height","initialCenter","zoom","map","marker","draggable","onDragend","t","React","GoogleApiWrapper","apiKey","onMarkerClick","selectedPlace","activeMarker","showingInfoWindow","onClose","markerData","initialPosition","location","loc","title","center","nextProps","that","markersList","selectLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","calculateDistance","data","lat1","lat2","lon1","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","key","visible","Transition","forwardRef","ref","Slide","direction","locationCards","componentDidMount","fetchDetail","uiLoading","Firebase","database","getItem","arrayLocation","on","snapshot","forEach","childSnapshot","childData","val","locations","saveData","body","long","locationId","selectedLocation","errors","open","viewOpen","bind","handleViewOpen","classes","handleClose","content","toolbar","display","float","IconButton","zIndex","floatingButton","aria-label","buttonType","fontSize","Dialog","fullScreen","TransitionComponent","AppBar","Toolbar","edge","userLocation","submitButton","form","spacing","marginBottom","xs","sm","Card","root","minWidth","CardContent","CardActions","withStyles","theme","flexGrow","padding","appBar","marginLeft","flex","textAlign","top","right","bottom","marginTop","mixins","bullet","transform","dialogeStyle","viewRoot","closeButton","palette","grey","home","logoutHandler","removeItem","noWrap","border","createMuiTheme","primary","light","main","dark","contrastText","App","basename","process","exact","path","Boolean","window","hostname","match","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.a0f0f97e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport * as firebase from 'firebase'\n\nclass login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            loading: false\n        };\n    }\n\n    clearState() {\n        this.setState({\n            email: '',\n            password: '',\n            loading: false\n        });\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({ loading: true });\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(userData.email, userData.password)\n            .then(res => {\n                if (res.user) {\n                    alert(\"User Logged in Successfully\");\n                    localStorage.setItem('loggedIn', true);\n                    localStorage.setItem('uid', res.user.uid)\n                    this.props.history.push('/');\n                    this.clearState();\n                }\n            })\n            .catch(e => {\n                var errorMsg = e.message ? e.message : \"Email Id or password Incorrect\"\n                alert(errorMsg);\n                this.clearState();\n            });\n\n    };\n\n    render() {\n        const { loading } = this.state;\n        return (\n            <div className='loginForm'>\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Login\n\t\t\t\t\t    </Typography>\n                        <form noValidate>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                                helperText=\"Enter a valid email\"\n                                onChange={this.handleChange} />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={this.handleChange} />\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.handleSubmit}\n                                disabled={loading || !this.state.email || !this.state.password} >\n                                Sign In\n\t\t\t\t\t\t\t{loading && <CircularProgress size={30} />}\n                            </Button>\n                            <Grid container>\n                                <Grid item>\n                                    <Link href=\"signup\" variant=\"body2\">\n                                        {\"Don't have an account? Sign Up\"}\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </div>\n                </Container></div>\n        );\n    }\n}\nexport default login;","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport * as firebase from 'firebase'\nclass signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            loading: false\n        };\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    clearState() {\n        this.setState({\n            email: '',\n            password: '',\n            loading: false\n        });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({ loading: true });\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(userData.email, userData.password)\n            .then(res => {\n                if (res.user) {\n                    alert(\"User Created\");\n                    this.clearState();\n                }\n            })\n            .catch(e => {\n                var errorMsg = e.message ? e.message : \"Some Error Occured. Please Try Again\"\n                alert(errorMsg);\n                this.clearState();\n            });\n    };\n\n    render() {\n        const { loading } = this.state;\n        return (\n            <div className='loginForm'>\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            SignUp\n\t\t\t\t\t</Typography>\n                        <form noValidate>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                                value={this.state.email}\n                                onChange={this.handleChange} />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                value={this.state.password}\n                                autoComplete=\"current-password\"\n                                onChange={this.handleChange} />\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.handleSubmit}\n                                disabled={loading || !this.state.email || !this.state.password}>\n                                Sign Up\n\t\t\t\t\t\t\t{loading && <CircularProgress size={30} />}\n                            </Button>\n                            <Grid container>\n                                <Grid item>\n                                    <Link href=\"/login\" variant=\"body2\">\n                                        {\"Already have an account? Sign In\"}\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </div>\n                </Container></div>\n        );\n    }\n}\nexport default signup;","import React, {  } from 'react';\nimport { GoogleApiWrapper, Map, Marker } from 'google-maps-react';\n\nclass MapContainer extends React.Component {\n  state = {\n    markers: [\n      {\n        name: \"Current position\",\n        position: {\n          lat: 13.0827,\n          lng: 80.2707\n        }\n      }\n    ]\n  };\n\n  onMarkerDragEnd = (coord, index) => {\n    const { latLng } = coord;\n    const lat = latLng.lat();\n    const lng = latLng.lng();\n\n    this.setState(prevState => {\n      const markers = [...this.state.markers];\n      markers[index] = { ...markers[index], position: { lat, lng } };\n      return { markers };\n    });\n    this.props.handleLocation(lat, lng);\n  };\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        style={{\n          position: 'fixed',\n          width: \"100%\",\n          height: \"55%\",\n        }}\n        initialCenter={{\n          lat: 13.0827,\n          lng: 80.2707\n        }}\n        zoom={10}>\n        {this.state.markers.map((marker, index) => (\n          <Marker\n            position={marker.position}\n            draggable={true}\n            onDragend={(t, map, coord) => this.onMarkerDragEnd(coord, index)}\n            name={marker.name}\n          />\n        ))}\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyD5eTNNRzPBVuU5mGkfYFNPa46_P2qNVgo'\n})(MapContainer);","import React from 'react';\nimport { GoogleApiWrapper, InfoWindow, Map, Marker } from 'google-maps-react';\n\nclass MapContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        let markerData = [];\n        let initialPosition = props.position ? props.position : {\n            lat: 13.0827,\n            lng: 80.2707\n        }\n        markerData = props.location.map(loc => {\n            return {\n                name: loc.title,\n                position: {\n                    lat: loc.lat,\n                    lng: loc.lng\n                }\n            };\n        });\n        markerData.push({\n            name: \"Current position\",\n            position: {\n                lat: 13.0827,\n                lng: 80.2707\n            }\n        });\n        this.state = {\n            markers: markerData,\n            showingInfoWindow: true,\n            activeMarker: {},\n            selectedPlace: {},\n            center: initialPosition\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        var that = this;\n        var markersList = nextProps.selectLocation;\n        navigator.geolocation.getCurrentPosition(pos => {\n            const coords = pos.coords;\n            markersList.push({\n                name: \"Current position\",\n                position: {\n                    lat: coords.latitude,\n                    lng: coords.longitude\n                }\n            });\n            that.setState({\n                markers: markersList\n            });\n            that.calculateDistance(markersList);\n        })\n    }\n\n    calculateDistance(data) {\n        var lat1 = data[0].position.lat\n        var lat2 = data[1].position.lat\n        var lon1 = data[0].position.lng\n        var lon2 = data[1].position.lng\n        if ((lat1 === lat2) && (lon1 === lon2)) {\n            return 0;\n        }\n        else {\n            var radlat1 = Math.PI * lat1 / 180;\n            var radlat2 = Math.PI * lat2 / 180;\n            var theta = lon1 - lon2;\n            var radtheta = Math.PI * theta / 180;\n            var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n            if (dist > 1) {\n                dist = 1;\n            }\n            dist = Math.acos(dist);\n            dist = dist * 180 / Math.PI;\n            dist = dist * 60 * 1.1515;\n            dist = dist * 1.609344\n            alert(\"The distance to your favourite location is \" + dist + \" Kms\");\n        }\n    }\n\n\n    onMarkerClick = (props, marker, e) => {\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n    }\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            });\n        }\n    };\n\n    render() {\n        return (\n            <Map google={this.props.google}\n                style={{\n                    width: \"50%\",\n                    height: \"200%\",\n                }}\n                initialCenter={this.state.center}\n                center={this.state.center}\n                zoom={10}>\n                {this.state.markers.map((marker, index) => (\n                    <Marker key={index}\n                        position={marker.position}\n                        draggable={false}\n                        onClick={this.onMarkerClick}\n                        name={marker.name}>\n                    </Marker>\n                ))}\n                <InfoWindow\n                    marker={this.state.activeMarker}\n                    visible={this.state.showingInfoWindow}\n                    onClose={this.onClose}>\n                    <div>\n                        <h4>{this.state.selectedPlace.name}</h4>\n                    </div>\n                </InfoWindow>\n            </Map>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyD5eTNNRzPBVuU5mGkfYFNPa46_P2qNVgo'\n})(MapContainer);","import React, { Component } from 'react';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CardContent from '@material-ui/core/CardContent';\nimport LocationSave from './locateMaps';\nimport Maps from './mapContainer'\nimport Firebase from 'firebase';\n\nconst styles = (theme) => ({\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    },\n    appBar: {\n        position: 'relative'\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1\n    },\n    submitButton: {\n        display: 'block',\n        color: 'white',\n        textAlign: 'center',\n        position: 'absolute',\n        top: 14,\n        right: 10\n    },\n    floatingButton: {\n        position: 'fixed',\n        bottom: 0,\n        right: 0\n    },\n    form: {\n        width: '98%',\n        marginLeft: 13,\n        marginTop: theme.spacing(3)\n    },\n    toolbar: theme.mixins.toolbar,\n    root: {\n        minWidth: 470\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)'\n    },\n    pos: {\n        marginBottom: 12\n    },\n\n    dialogeStyle: {\n        maxWidth: '50%'\n    },\n    viewRoot: {\n        margin: 0,\n        padding: theme.spacing(2)\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500]\n    }\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nclass locationCards extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locations: [],\n            saveData: [],\n            title: '',\n            body: '',\n            lat: '',\n            long: '',\n            locationId: '',\n            selectedLocation: [],\n            errors: [],\n            position: {},\n            open: false,\n            uiLoading: true,\n            viewOpen: false\n        };\n        this.handleLocation = this.handleLocation.bind(this);\n        this.handleViewOpen = this.handleViewOpen.bind(this);\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    componentDidMount = () => {\n        this.fetchDetail();\n    };\n\n    fetchDetail = () => {\n        this.setState({\n            uiLoading: true\n        });\n        let ref = Firebase.database().ref('location/' + localStorage.getItem('uid'));\n        let arrayLocation = [];\n        ref.on('value', snapshot => {\n            snapshot.forEach(function (childSnapshot) {\n                var childData = childSnapshot.val();\n                arrayLocation.push(childData[0])\n            });\n            this.setState({\n                locations: arrayLocation,\n                uiLoading: false\n            });\n        });\n    }\n\n    handleLocation(latitude, longitude) {\n        this.setState({\n            lat: latitude,\n            long: longitude\n        });\n    }\n\n    handleViewOpen(data) {\n        var location = [\n            {\n                name: data.location.title,\n                position: {\n                    lat: data.location.lat,\n                    lng: data.location.lng\n                }\n            }\n        ];\n        var position = {\n            lat: data.location.lat,\n            lng: data.location.lng\n        }\n        this.setState({\n            selectedLocation: location,\n            position: position,\n            viewOpen: true\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { open } = this.state;\n\n        const handleClickOpen = () => {\n            this.setState({\n                locationId: '',\n                title: '',\n                body: '',\n                buttonType: '',\n                open: true\n            });\n        };\n\n        const handleSubmit = (event) => {\n            event.preventDefault();\n            const uid = localStorage.getItem('uid')\n            let userLocation = [{\n                title: this.state.title,\n                body: this.state.body,\n                lat: this.state.lat,\n                lng: this.state.long\n            }];\n            Firebase.database().ref('location/' + uid).push(userLocation);\n            alert('Location Saved Successfully');\n            this.setState({\n                open: false\n            });\n            this.fetchDetail();\n        };\n\n\n        const handleClose = (event) => {\n            this.setState({ open: false });\n        };\n\n        if (this.state.uiLoading === true) {\n            return (\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    {this.state.uiLoading && <CircularProgress size={150} />}\n                </main>\n            );\n        } else {\n            return (<div>\n                <main className={classes.content} style={{ maxWidth: '50%', display: 'inline-block', float: 'left' }}>\n                    <div className={classes.toolbar} />\n                    <div>{!this.state.open ?\n                        <IconButton style={{ zIndex: '9999999999' }}\n                            className={classes.floatingButton}\n                            color=\"primary\"\n                            aria-label=\"Add Location\"\n                            onClick={handleClickOpen}>\n                            <AddCircleIcon style={{ fontSize: 100 }} />\n                        </IconButton> : <div></div>}</div>\n                    <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition} >\n                        <AppBar style={{ position: 'relative' }}>\n                            <Toolbar>\n                                <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                    <CloseIcon />\n                                </IconButton>\n                                <Typography variant=\"h6\">\n                                    Add favourite location\n\t\t\t\t\t\t\t\t</Typography>\n                                <Button\n                                    autoFocus\n                                    color=\"inherit\"\n                                    onClick={handleSubmit}\n                                    className={classes.submitButton}>\n                                    SAVE\n\t\t\t\t\t\t\t\t</Button>\n                            </Toolbar>\n                        </AppBar>\n                        <form className={classes.form} noValidate>\n                            <Grid container spacing={2} style={{ marginBottom: '20px' }}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"locationTitle\"\n                                        label=\"Location Name\"\n                                        name=\"title\"\n                                        autoComplete=\"locationTitle\"\n                                        value={this.state.title}\n                                        onChange={this.handleChange} />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"address\"\n                                        label=\"Address\"\n                                        name=\"body\"\n                                        autoComplete=\"address\"\n                                        onChange={this.handleChange}\n                                        value={this.state.body} />\n                                </Grid>\n                            </Grid>\n                            <div className=\"test\">\n                                <LocationSave handleLocation={this.handleLocation} />\n                            </div>\n                        </form>\n                    </Dialog>\n                    <Grid container spacing={2}>\n                        {this.state.locations.map((location) => (\n                            <Grid item xs={12} sm={6}>\n                                <Card className={classes.root} variant=\"outlined\" style={{ minWidth: '100%' }}>\n                                    <CardContent>\n                                        <Typography variant=\"h6\" component=\"h2\">\n                                            {location.title}\n                                        </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                        </Typography>\n                                        <Typography variant=\"body2\" component=\"p\">\n                                            Address:{`${location.body}`}\n                                        </Typography>\n                                        <Typography variant=\"body2\" component=\"p\">\n                                            Lat: {location.lat}\n                                        </Typography>\n                                        <Typography variant=\"body2\" component=\"p\">\n                                            Long: {location.lng}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button size=\"small\" color=\"primary\" onClick={() => this.handleViewOpen({ location })}>\n                                            {' '}\n\t\t\t\t\t\t\t\t\t\t\tView{' '}\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </main>\n                {!this.state.open &&\n                    <div className=\"maps\" style={{ float: 'left' }}>{this.state.viewOpen ? <Maps selectLocation={this.state.selectedLocation} location={this.state.locations} position={this.state.position} /> : <Maps location={this.state.locations} />}</div>\n                }</div>\n            );\n        }\n    }\n}\n\nexport default withStyles(styles)(locationCards);","import React, { Component } from 'react';\nimport LocationCards from './locationCards.js';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass home extends Component {\n\n    logoutHandler = (event) => {\n        localStorage.removeItem('loggedIn')\n        this.props.history.push('/login');\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            uiLoading: false\n        };\n    }\n\n    componentDidMount = () => {\n        if (localStorage.getItem('loggedIn') !== \"true\") {\n            this.logoutHandler();\n        }\n    };\n\n    render() {\n        if (this.state.uiLoading === true) {\n            return (\n                <div>\n                    {this.state.uiLoading && <CircularProgress size={150} />}\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <CssBaseline />\n                    <AppBar position=\"fixed\">\n                        <Toolbar>\n                            <Typography variant=\"h6\" noWrap>\n                                Favorite Location Tracker\n\t\t\t\t\t\t\t</Typography>\n                            <Typography variant=\"h6\" noWrap style={{ border: '1px solid', padding: '0px 10px', marginLeft: '2%' }} onClick={this.logoutHandler}>\n                                Logout\n\t\t\t\t\t\t\t</Typography>\n                        </Toolbar>\n                    </AppBar>\n                    <LocationCards />\n                </div>\n            );\n        }\n    }\n}\n\nexport default home;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport login from './Components/login';\nimport signup from './Components/signup';\nimport home from './Components/dashboard';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#33c9dc',\n      main: '#FF5722',\n      dark: '#d50000',\n      contrastText: '#fff'\n    }\n  }\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={home} />\n            <Route exact path=\"/login\" component={login} />\n            <Route exact path=\"/signup\" component={signup} />\n          </Switch>\n        </div>\n      </Router>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\nimport firebaseConfig from './firebase'\n\nfirebase.initializeApp(firebaseConfig);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\n    apiKey: \"AIzaSyBbCghBXCJMiaGFQS-jSh_3t0-FP-HRgq0\",\n    authDomain: \"fav-location-tracker.firebaseapp.com\",\n    databaseURL: \"https://fav-location-tracker.firebaseio.com\",\n    projectId: \"fav-location-tracker\",\n    storageBucket: \"fav-location-tracker.appspot.com\",\n    messagingSenderId: \"153323060946\",\n    appId: \"1:153323060946:web:d0d12b593c377c3148f70b\"\n};"],"sourceRoot":""}